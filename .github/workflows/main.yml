name: Build, Push and Deploy to DigitalOcean

on:
  push:
    branches:
      - main  # This will trigger the workflow on any push to the 'main' branch

env:
  DOCKER_REGISTRY: registry.digitalocean.com
  IMAGE_NAME: ihsancrm/websocket_ihsancrm-main  # Replace with your registry and image name
  KUBERNETES_DEPLOYMENT: ihsanai-websocket-main  # Replace with your Kubernetes deployment name
  KUBERNETES_NAMESPACE: default  # Replace if not using 'default'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to DigitalOcean Container Registry
      - name: Log in to DigitalOcean Registry
        run: echo "${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}" | docker login -u "$DOCKER_REGISTRY" --password-stdin $DOCKER_REGISTRY

      # Step 4: Build Docker image
      - name: Build Docker image
        run: |
          IMAGE_TAG="v1-${{ github.sha }}"
          docker build -t $DOCKER_REGISTRY/$IMAGE_NAME:$IMAGE_TAG .
          docker tag $DOCKER_REGISTRY/$IMAGE_NAME:$IMAGE_TAG $DOCKER_REGISTRY/$IMAGE_NAME:latest

      # Debugging step to check the image reference format
      - name: Debug Image References
        run: |
          IMAGE_TAG="v1-${{ github.sha }}"
          echo "DOCKER_REGISTRY: $DOCKER_REGISTRY"
          echo "IMAGE_NAME: $IMAGE_NAME"
          echo "IMAGE_TAG: $IMAGE_TAG"

      # Step 5: Push Docker image to DigitalOcean
      - name: Push Docker image to DigitalOcean Registry
        run: |
          IMAGE_TAG="v1-${{ github.sha }}"
          docker push $DOCKER_REGISTRY/$IMAGE_NAME:$IMAGE_TAG
          docker push $DOCKER_REGISTRY/$IMAGE_NAME:latest

      # Step 6: Install kubectl (Kubernetes CLI)
      - name: Set up kubectl
        run: |
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      # Step 7: Configure kubectl (Kubeconfig file from DigitalOcean)
      - name: Set up Kubeconfig
        run: |
          mkdir -p $HOME/.kube  # Create the .kube directory
          echo "${{ secrets.KUBECONFIG }}" > $HOME/.kube/config

      # Step 8: Update Kubernetes deployment image
      - name: Update deployment with new image
        run: |
          IMAGE_TAG="v1-${{ github.sha }}"
          kubectl set image deployment/$KUBERNETES_DEPLOYMENT ihsanai-websocket-main-container=$DOCKER_REGISTRY/$IMAGE_NAME:$IMAGE_TAG -n $KUBERNETES_NAMESPACE

      # Step 9: Apply the deployment
      - name: Apply Kubernetes Deployment
        run: |
          kubectl rollout restart deployment/$KUBERNETES_DEPLOYMENT -n $KUBERNETES_NAMESPACE
